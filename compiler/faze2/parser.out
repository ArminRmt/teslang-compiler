Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BUILTIN_METHODES
    LIST

Grammar

Rule 0     S' -> prog
Rule 1     prog -> func prog
Rule 2     prog -> empty
Rule 3     func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
Rule 4     func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
Rule 5     body -> stmt body
Rule 6     body -> empty
Rule 7     stmt -> expr SEMI
Rule 8     stmt -> defvar SEMI
Rule 9     stmt -> if_statement
Rule 10    stmt -> ifelse_statement
Rule 11    stmt -> while_statement
Rule 12    stmt -> for_statement
Rule 13    stmt -> RETURN expr SEMI
Rule 14    stmt -> LBRACE body RBRACE
Rule 15    stmt -> func
Rule 16    if_statement -> IF LPAREN expr RPAREN stmt
Rule 17    ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt
Rule 18    while_statement -> WHILE LPAREN expr RPAREN stmt
Rule 19    for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
Rule 20    defvar -> VAR TYPE ID
Rule 21    defvar -> VAR TYPE ID ASSIGN expr
Rule 22    flist -> TYPE ID
Rule 23    flist -> TYPE ID COMMA flist
Rule 24    flist -> empty
Rule 25    expr -> expr QUESTIONMARK expr COLON expr
Rule 26    expr -> ID LPAREN clist RPAREN
Rule 27    expr -> expr LBLOCK expr RBLOCK
Rule 28    expr -> LBLOCK clist RBLOCK
Rule 29    expr -> expr ADD expr
Rule 30    expr -> expr SUB expr
Rule 31    expr -> expr MULT expr
Rule 32    expr -> expr DIV expr
Rule 33    expr -> expr MOD expr
Rule 34    expr -> expr GREATER expr
Rule 35    expr -> expr LESS expr
Rule 36    expr -> expr EQUAL expr
Rule 37    expr -> expr GREATEREQ expr
Rule 38    expr -> expr LESSEQ expr
Rule 39    expr -> expr NOTEQUAL expr
Rule 40    expr -> expr OR expr
Rule 41    expr -> expr AND expr
Rule 42    expr -> ID ASSIGN expr
Rule 43    expr -> NOT expr
Rule 44    expr -> ADD expr
Rule 45    expr -> SUB expr
Rule 46    expr -> ID
Rule 47    expr -> INT
Rule 48    expr -> STRING
Rule 49    expr -> builtin_methods
Rule 50    clist -> expr
Rule 51    clist -> expr COMMA clist
Rule 52    clist -> empty
Rule 53    type -> INT
Rule 54    type -> VECTOR
Rule 55    type -> NULL
Rule 56    type -> STRING
Rule 57    empty -> <empty>
Rule 58    builtin_methods -> LENGTH LPAREN expr RPAREN
Rule 59    builtin_methods -> SCAN LPAREN RPAREN
Rule 60    builtin_methods -> PRINT LPAREN expr RPAREN
Rule 61    builtin_methods -> LPAREN expr RPAREN
Rule 62    builtin_methods -> EXIT LPAREN expr RPAREN

Terminals, with rules where they appear

ADD                  : 29 44
AND                  : 41
ASSIGN               : 21 42
BUILTIN_METHODES     : 
COLON                : 25
COMMA                : 23 51
DEF                  : 3 4
DIV                  : 32
ELSE                 : 17
EQUAL                : 19 36
EXIT                 : 62
FOR                  : 19
GREATER              : 34
GREATEREQ            : 37
ID                   : 3 4 19 20 21 22 23 26 42 46
IF                   : 16 17
INT                  : 47 53
LBLOCK               : 27 28
LBRACE               : 3 14
LENGTH               : 58
LESS                 : 35
LESSEQ               : 38
LIST                 : 
LPAREN               : 3 4 16 17 18 19 26 58 59 60 61 62
MOD                  : 33
MULT                 : 31
NOT                  : 43
NOTEQUAL             : 39
NULL                 : 55
OR                   : 40
PRINT                : 60
QUESTIONMARK         : 25
RBLOCK               : 27 28
RBRACE               : 3 14
RETURN               : 4 13
RPAREN               : 3 4 16 17 18 19 26 58 59 60 61 62
SCAN                 : 59
SEMI                 : 4 7 8 13
STRING               : 48 56
SUB                  : 30 45
TO                   : 19
TYPE                 : 3 4 20 21 22 23
VAR                  : 20 21
VECTOR               : 54
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

body                 : 3 5 14
builtin_methods      : 49
clist                : 26 28 51
defvar               : 8
empty                : 2 6 24 52
expr                 : 4 7 13 16 17 18 19 19 21 25 25 25 27 27 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 43 44 45 50 51 58 60 61 62
flist                : 3 4 23
for_statement        : 12
func                 : 1 15
if_statement         : 9
ifelse_statement     : 10
prog                 : 1 0
stmt                 : 5 16 17 17 18 19
type                 : 
while_statement      : 11

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . func prog
    (2) prog -> . empty
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (57) empty -> .

    DEF             shift and go to state 4
    $end            reduce using rule 57 (empty -> .)

    prog                           shift and go to state 1
    func                           shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> prog .



state 2

    (1) prog -> func . prog
    (1) prog -> . func prog
    (2) prog -> . empty
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (57) empty -> .

    DEF             shift and go to state 4
    $end            reduce using rule 57 (empty -> .)

    func                           shift and go to state 2
    prog                           shift and go to state 5
    empty                          shift and go to state 3

state 3

    (2) prog -> empty .

    $end            reduce using rule 2 (prog -> empty .)


state 4

    (3) func -> DEF . TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> DEF . TYPE ID LPAREN flist RPAREN RETURN expr SEMI

    TYPE            shift and go to state 6


state 5

    (1) prog -> func prog .

    $end            reduce using rule 1 (prog -> func prog .)


state 6

    (3) func -> DEF TYPE . ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> DEF TYPE . ID LPAREN flist RPAREN RETURN expr SEMI

    ID              shift and go to state 7


state 7

    (3) func -> DEF TYPE ID . LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> DEF TYPE ID . LPAREN flist RPAREN RETURN expr SEMI

    LPAREN          shift and go to state 8


state 8

    (3) func -> DEF TYPE ID LPAREN . flist RPAREN LBRACE body RBRACE
    (4) func -> DEF TYPE ID LPAREN . flist RPAREN RETURN expr SEMI
    (22) flist -> . TYPE ID
    (23) flist -> . TYPE ID COMMA flist
    (24) flist -> . empty
    (57) empty -> .

    TYPE            shift and go to state 9
    RPAREN          reduce using rule 57 (empty -> .)

    flist                          shift and go to state 10
    empty                          shift and go to state 11

state 9

    (22) flist -> TYPE . ID
    (23) flist -> TYPE . ID COMMA flist

    ID              shift and go to state 12


state 10

    (3) func -> DEF TYPE ID LPAREN flist . RPAREN LBRACE body RBRACE
    (4) func -> DEF TYPE ID LPAREN flist . RPAREN RETURN expr SEMI

    RPAREN          shift and go to state 13


state 11

    (24) flist -> empty .

    RPAREN          reduce using rule 24 (flist -> empty .)


state 12

    (22) flist -> TYPE ID .
    (23) flist -> TYPE ID . COMMA flist

    RPAREN          reduce using rule 22 (flist -> TYPE ID .)
    COMMA           shift and go to state 14


state 13

    (3) func -> DEF TYPE ID LPAREN flist RPAREN . LBRACE body RBRACE
    (4) func -> DEF TYPE ID LPAREN flist RPAREN . RETURN expr SEMI

    LBRACE          shift and go to state 15
    RETURN          shift and go to state 16


state 14

    (23) flist -> TYPE ID COMMA . flist
    (22) flist -> . TYPE ID
    (23) flist -> . TYPE ID COMMA flist
    (24) flist -> . empty
    (57) empty -> .

    TYPE            shift and go to state 9
    RPAREN          reduce using rule 57 (empty -> .)

    flist                          shift and go to state 17
    empty                          shift and go to state 11

state 15

    (3) func -> DEF TYPE ID LPAREN flist RPAREN LBRACE . body RBRACE
    (5) body -> . stmt body
    (6) body -> . empty
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (57) empty -> .
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    RBRACE          reduce using rule 57 (empty -> .)
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    body                           shift and go to state 21
    stmt                           shift and go to state 22
    empty                          shift and go to state 23
    expr                           shift and go to state 24
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 16

    (4) func -> DEF TYPE ID LPAREN flist RPAREN RETURN . expr SEMI
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 47
    builtin_methods                shift and go to state 38

state 17

    (23) flist -> TYPE ID COMMA flist .

    RPAREN          reduce using rule 23 (flist -> TYPE ID COMMA flist .)


state 18

    (26) expr -> ID . LPAREN clist RPAREN
    (42) expr -> ID . ASSIGN expr
    (46) expr -> ID .

    LPAREN          shift and go to state 48
    ASSIGN          shift and go to state 49
    SEMI            reduce using rule 46 (expr -> ID .)
    QUESTIONMARK    reduce using rule 46 (expr -> ID .)
    LBLOCK          reduce using rule 46 (expr -> ID .)
    ADD             reduce using rule 46 (expr -> ID .)
    SUB             reduce using rule 46 (expr -> ID .)
    MULT            reduce using rule 46 (expr -> ID .)
    DIV             reduce using rule 46 (expr -> ID .)
    MOD             reduce using rule 46 (expr -> ID .)
    GREATER         reduce using rule 46 (expr -> ID .)
    LESS            reduce using rule 46 (expr -> ID .)
    EQUAL           reduce using rule 46 (expr -> ID .)
    GREATEREQ       reduce using rule 46 (expr -> ID .)
    LESSEQ          reduce using rule 46 (expr -> ID .)
    NOTEQUAL        reduce using rule 46 (expr -> ID .)
    OR              reduce using rule 46 (expr -> ID .)
    AND             reduce using rule 46 (expr -> ID .)
    RPAREN          reduce using rule 46 (expr -> ID .)
    COMMA           reduce using rule 46 (expr -> ID .)
    RBLOCK          reduce using rule 46 (expr -> ID .)
    COLON           reduce using rule 46 (expr -> ID .)
    TO              reduce using rule 46 (expr -> ID .)


state 19

    (61) builtin_methods -> LPAREN . expr RPAREN
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 50
    builtin_methods                shift and go to state 38

state 20

    (14) stmt -> LBRACE . body RBRACE
    (5) body -> . stmt body
    (6) body -> . empty
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (57) empty -> .
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    RBRACE          reduce using rule 57 (empty -> .)
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    body                           shift and go to state 51
    stmt                           shift and go to state 22
    empty                          shift and go to state 23
    expr                           shift and go to state 24
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 21

    (3) func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 52


state 22

    (5) body -> stmt . body
    (5) body -> . stmt body
    (6) body -> . empty
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (57) empty -> .
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    RBRACE          reduce using rule 57 (empty -> .)
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    stmt                           shift and go to state 22
    body                           shift and go to state 53
    empty                          shift and go to state 23
    expr                           shift and go to state 24
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 23

    (6) body -> empty .

    RBRACE          reduce using rule 6 (body -> empty .)


state 24

    (7) stmt -> expr . SEMI
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            shift and go to state 54
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 25

    (8) stmt -> defvar . SEMI

    SEMI            shift and go to state 70


state 26

    (9) stmt -> if_statement .

    RETURN          reduce using rule 9 (stmt -> if_statement .)
    LBRACE          reduce using rule 9 (stmt -> if_statement .)
    ID              reduce using rule 9 (stmt -> if_statement .)
    LBLOCK          reduce using rule 9 (stmt -> if_statement .)
    NOT             reduce using rule 9 (stmt -> if_statement .)
    ADD             reduce using rule 9 (stmt -> if_statement .)
    SUB             reduce using rule 9 (stmt -> if_statement .)
    INT             reduce using rule 9 (stmt -> if_statement .)
    STRING          reduce using rule 9 (stmt -> if_statement .)
    VAR             reduce using rule 9 (stmt -> if_statement .)
    IF              reduce using rule 9 (stmt -> if_statement .)
    WHILE           reduce using rule 9 (stmt -> if_statement .)
    FOR             reduce using rule 9 (stmt -> if_statement .)
    DEF             reduce using rule 9 (stmt -> if_statement .)
    LENGTH          reduce using rule 9 (stmt -> if_statement .)
    SCAN            reduce using rule 9 (stmt -> if_statement .)
    PRINT           reduce using rule 9 (stmt -> if_statement .)
    LPAREN          reduce using rule 9 (stmt -> if_statement .)
    EXIT            reduce using rule 9 (stmt -> if_statement .)
    RBRACE          reduce using rule 9 (stmt -> if_statement .)
    ELSE            reduce using rule 9 (stmt -> if_statement .)


state 27

    (10) stmt -> ifelse_statement .

    RETURN          reduce using rule 10 (stmt -> ifelse_statement .)
    LBRACE          reduce using rule 10 (stmt -> ifelse_statement .)
    ID              reduce using rule 10 (stmt -> ifelse_statement .)
    LBLOCK          reduce using rule 10 (stmt -> ifelse_statement .)
    NOT             reduce using rule 10 (stmt -> ifelse_statement .)
    ADD             reduce using rule 10 (stmt -> ifelse_statement .)
    SUB             reduce using rule 10 (stmt -> ifelse_statement .)
    INT             reduce using rule 10 (stmt -> ifelse_statement .)
    STRING          reduce using rule 10 (stmt -> ifelse_statement .)
    VAR             reduce using rule 10 (stmt -> ifelse_statement .)
    IF              reduce using rule 10 (stmt -> ifelse_statement .)
    WHILE           reduce using rule 10 (stmt -> ifelse_statement .)
    FOR             reduce using rule 10 (stmt -> ifelse_statement .)
    DEF             reduce using rule 10 (stmt -> ifelse_statement .)
    LENGTH          reduce using rule 10 (stmt -> ifelse_statement .)
    SCAN            reduce using rule 10 (stmt -> ifelse_statement .)
    PRINT           reduce using rule 10 (stmt -> ifelse_statement .)
    LPAREN          reduce using rule 10 (stmt -> ifelse_statement .)
    EXIT            reduce using rule 10 (stmt -> ifelse_statement .)
    RBRACE          reduce using rule 10 (stmt -> ifelse_statement .)
    ELSE            reduce using rule 10 (stmt -> ifelse_statement .)


state 28

    (11) stmt -> while_statement .

    RETURN          reduce using rule 11 (stmt -> while_statement .)
    LBRACE          reduce using rule 11 (stmt -> while_statement .)
    ID              reduce using rule 11 (stmt -> while_statement .)
    LBLOCK          reduce using rule 11 (stmt -> while_statement .)
    NOT             reduce using rule 11 (stmt -> while_statement .)
    ADD             reduce using rule 11 (stmt -> while_statement .)
    SUB             reduce using rule 11 (stmt -> while_statement .)
    INT             reduce using rule 11 (stmt -> while_statement .)
    STRING          reduce using rule 11 (stmt -> while_statement .)
    VAR             reduce using rule 11 (stmt -> while_statement .)
    IF              reduce using rule 11 (stmt -> while_statement .)
    WHILE           reduce using rule 11 (stmt -> while_statement .)
    FOR             reduce using rule 11 (stmt -> while_statement .)
    DEF             reduce using rule 11 (stmt -> while_statement .)
    LENGTH          reduce using rule 11 (stmt -> while_statement .)
    SCAN            reduce using rule 11 (stmt -> while_statement .)
    PRINT           reduce using rule 11 (stmt -> while_statement .)
    LPAREN          reduce using rule 11 (stmt -> while_statement .)
    EXIT            reduce using rule 11 (stmt -> while_statement .)
    RBRACE          reduce using rule 11 (stmt -> while_statement .)
    ELSE            reduce using rule 11 (stmt -> while_statement .)


state 29

    (12) stmt -> for_statement .

    RETURN          reduce using rule 12 (stmt -> for_statement .)
    LBRACE          reduce using rule 12 (stmt -> for_statement .)
    ID              reduce using rule 12 (stmt -> for_statement .)
    LBLOCK          reduce using rule 12 (stmt -> for_statement .)
    NOT             reduce using rule 12 (stmt -> for_statement .)
    ADD             reduce using rule 12 (stmt -> for_statement .)
    SUB             reduce using rule 12 (stmt -> for_statement .)
    INT             reduce using rule 12 (stmt -> for_statement .)
    STRING          reduce using rule 12 (stmt -> for_statement .)
    VAR             reduce using rule 12 (stmt -> for_statement .)
    IF              reduce using rule 12 (stmt -> for_statement .)
    WHILE           reduce using rule 12 (stmt -> for_statement .)
    FOR             reduce using rule 12 (stmt -> for_statement .)
    DEF             reduce using rule 12 (stmt -> for_statement .)
    LENGTH          reduce using rule 12 (stmt -> for_statement .)
    SCAN            reduce using rule 12 (stmt -> for_statement .)
    PRINT           reduce using rule 12 (stmt -> for_statement .)
    LPAREN          reduce using rule 12 (stmt -> for_statement .)
    EXIT            reduce using rule 12 (stmt -> for_statement .)
    RBRACE          reduce using rule 12 (stmt -> for_statement .)
    ELSE            reduce using rule 12 (stmt -> for_statement .)


state 30

    (13) stmt -> RETURN . expr SEMI
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 71
    builtin_methods                shift and go to state 38

state 31

    (15) stmt -> func .

    RETURN          reduce using rule 15 (stmt -> func .)
    LBRACE          reduce using rule 15 (stmt -> func .)
    ID              reduce using rule 15 (stmt -> func .)
    LBLOCK          reduce using rule 15 (stmt -> func .)
    NOT             reduce using rule 15 (stmt -> func .)
    ADD             reduce using rule 15 (stmt -> func .)
    SUB             reduce using rule 15 (stmt -> func .)
    INT             reduce using rule 15 (stmt -> func .)
    STRING          reduce using rule 15 (stmt -> func .)
    VAR             reduce using rule 15 (stmt -> func .)
    IF              reduce using rule 15 (stmt -> func .)
    WHILE           reduce using rule 15 (stmt -> func .)
    FOR             reduce using rule 15 (stmt -> func .)
    DEF             reduce using rule 15 (stmt -> func .)
    LENGTH          reduce using rule 15 (stmt -> func .)
    SCAN            reduce using rule 15 (stmt -> func .)
    PRINT           reduce using rule 15 (stmt -> func .)
    LPAREN          reduce using rule 15 (stmt -> func .)
    EXIT            reduce using rule 15 (stmt -> func .)
    RBRACE          reduce using rule 15 (stmt -> func .)
    ELSE            reduce using rule 15 (stmt -> func .)


state 32

    (28) expr -> LBLOCK . clist RBLOCK
    (50) clist -> . expr
    (51) clist -> . expr COMMA clist
    (52) clist -> . empty
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (57) empty -> .
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    RBLOCK          reduce using rule 57 (empty -> .)
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    clist                          shift and go to state 72
    expr                           shift and go to state 73
    empty                          shift and go to state 74
    builtin_methods                shift and go to state 38

state 33

    (44) expr -> ADD . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 75
    builtin_methods                shift and go to state 38

state 34

    (45) expr -> SUB . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 76
    builtin_methods                shift and go to state 38

state 35

    (43) expr -> NOT . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 77
    builtin_methods                shift and go to state 38

state 36

    (47) expr -> INT .

    SEMI            reduce using rule 47 (expr -> INT .)
    QUESTIONMARK    reduce using rule 47 (expr -> INT .)
    LBLOCK          reduce using rule 47 (expr -> INT .)
    ADD             reduce using rule 47 (expr -> INT .)
    SUB             reduce using rule 47 (expr -> INT .)
    MULT            reduce using rule 47 (expr -> INT .)
    DIV             reduce using rule 47 (expr -> INT .)
    MOD             reduce using rule 47 (expr -> INT .)
    GREATER         reduce using rule 47 (expr -> INT .)
    LESS            reduce using rule 47 (expr -> INT .)
    EQUAL           reduce using rule 47 (expr -> INT .)
    GREATEREQ       reduce using rule 47 (expr -> INT .)
    LESSEQ          reduce using rule 47 (expr -> INT .)
    NOTEQUAL        reduce using rule 47 (expr -> INT .)
    OR              reduce using rule 47 (expr -> INT .)
    AND             reduce using rule 47 (expr -> INT .)
    RPAREN          reduce using rule 47 (expr -> INT .)
    COMMA           reduce using rule 47 (expr -> INT .)
    RBLOCK          reduce using rule 47 (expr -> INT .)
    COLON           reduce using rule 47 (expr -> INT .)
    TO              reduce using rule 47 (expr -> INT .)


state 37

    (48) expr -> STRING .

    SEMI            reduce using rule 48 (expr -> STRING .)
    QUESTIONMARK    reduce using rule 48 (expr -> STRING .)
    LBLOCK          reduce using rule 48 (expr -> STRING .)
    ADD             reduce using rule 48 (expr -> STRING .)
    SUB             reduce using rule 48 (expr -> STRING .)
    MULT            reduce using rule 48 (expr -> STRING .)
    DIV             reduce using rule 48 (expr -> STRING .)
    MOD             reduce using rule 48 (expr -> STRING .)
    GREATER         reduce using rule 48 (expr -> STRING .)
    LESS            reduce using rule 48 (expr -> STRING .)
    EQUAL           reduce using rule 48 (expr -> STRING .)
    GREATEREQ       reduce using rule 48 (expr -> STRING .)
    LESSEQ          reduce using rule 48 (expr -> STRING .)
    NOTEQUAL        reduce using rule 48 (expr -> STRING .)
    OR              reduce using rule 48 (expr -> STRING .)
    AND             reduce using rule 48 (expr -> STRING .)
    RPAREN          reduce using rule 48 (expr -> STRING .)
    COMMA           reduce using rule 48 (expr -> STRING .)
    RBLOCK          reduce using rule 48 (expr -> STRING .)
    COLON           reduce using rule 48 (expr -> STRING .)
    TO              reduce using rule 48 (expr -> STRING .)


state 38

    (49) expr -> builtin_methods .

    SEMI            reduce using rule 49 (expr -> builtin_methods .)
    QUESTIONMARK    reduce using rule 49 (expr -> builtin_methods .)
    LBLOCK          reduce using rule 49 (expr -> builtin_methods .)
    ADD             reduce using rule 49 (expr -> builtin_methods .)
    SUB             reduce using rule 49 (expr -> builtin_methods .)
    MULT            reduce using rule 49 (expr -> builtin_methods .)
    DIV             reduce using rule 49 (expr -> builtin_methods .)
    MOD             reduce using rule 49 (expr -> builtin_methods .)
    GREATER         reduce using rule 49 (expr -> builtin_methods .)
    LESS            reduce using rule 49 (expr -> builtin_methods .)
    EQUAL           reduce using rule 49 (expr -> builtin_methods .)
    GREATEREQ       reduce using rule 49 (expr -> builtin_methods .)
    LESSEQ          reduce using rule 49 (expr -> builtin_methods .)
    NOTEQUAL        reduce using rule 49 (expr -> builtin_methods .)
    OR              reduce using rule 49 (expr -> builtin_methods .)
    AND             reduce using rule 49 (expr -> builtin_methods .)
    RPAREN          reduce using rule 49 (expr -> builtin_methods .)
    COMMA           reduce using rule 49 (expr -> builtin_methods .)
    RBLOCK          reduce using rule 49 (expr -> builtin_methods .)
    COLON           reduce using rule 49 (expr -> builtin_methods .)
    TO              reduce using rule 49 (expr -> builtin_methods .)


state 39

    (20) defvar -> VAR . TYPE ID
    (21) defvar -> VAR . TYPE ID ASSIGN expr

    TYPE            shift and go to state 78


state 40

    (16) if_statement -> IF . LPAREN expr RPAREN stmt
    (17) ifelse_statement -> IF . LPAREN expr RPAREN stmt ELSE stmt

    LPAREN          shift and go to state 79


state 41

    (18) while_statement -> WHILE . LPAREN expr RPAREN stmt

    LPAREN          shift and go to state 80


state 42

    (19) for_statement -> FOR . LPAREN ID EQUAL expr TO expr RPAREN stmt

    LPAREN          shift and go to state 81


state 43

    (58) builtin_methods -> LENGTH . LPAREN expr RPAREN

    LPAREN          shift and go to state 82


state 44

    (59) builtin_methods -> SCAN . LPAREN RPAREN

    LPAREN          shift and go to state 83


state 45

    (60) builtin_methods -> PRINT . LPAREN expr RPAREN

    LPAREN          shift and go to state 84


state 46

    (62) builtin_methods -> EXIT . LPAREN expr RPAREN

    LPAREN          shift and go to state 85


state 47

    (4) func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr . SEMI
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            shift and go to state 86
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 48

    (26) expr -> ID LPAREN . clist RPAREN
    (50) clist -> . expr
    (51) clist -> . expr COMMA clist
    (52) clist -> . empty
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (57) empty -> .
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    RPAREN          reduce using rule 57 (empty -> .)
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    clist                          shift and go to state 87
    expr                           shift and go to state 73
    empty                          shift and go to state 74
    builtin_methods                shift and go to state 38

state 49

    (42) expr -> ID ASSIGN . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 88
    builtin_methods                shift and go to state 38

state 50

    (61) builtin_methods -> LPAREN expr . RPAREN
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 89
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 51

    (14) stmt -> LBRACE body . RBRACE

    RBRACE          shift and go to state 90


state 52

    (3) func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .

    DEF             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    $end            reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    LBRACE          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    LBLOCK          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    NOT             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    ADD             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    SUB             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    VAR             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    LENGTH          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    SCAN            reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    EXIT            reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)
    ELSE            reduce using rule 3 (func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE .)


state 53

    (5) body -> stmt body .

    RBRACE          reduce using rule 5 (body -> stmt body .)


state 54

    (7) stmt -> expr SEMI .

    RETURN          reduce using rule 7 (stmt -> expr SEMI .)
    LBRACE          reduce using rule 7 (stmt -> expr SEMI .)
    ID              reduce using rule 7 (stmt -> expr SEMI .)
    LBLOCK          reduce using rule 7 (stmt -> expr SEMI .)
    NOT             reduce using rule 7 (stmt -> expr SEMI .)
    ADD             reduce using rule 7 (stmt -> expr SEMI .)
    SUB             reduce using rule 7 (stmt -> expr SEMI .)
    INT             reduce using rule 7 (stmt -> expr SEMI .)
    STRING          reduce using rule 7 (stmt -> expr SEMI .)
    VAR             reduce using rule 7 (stmt -> expr SEMI .)
    IF              reduce using rule 7 (stmt -> expr SEMI .)
    WHILE           reduce using rule 7 (stmt -> expr SEMI .)
    FOR             reduce using rule 7 (stmt -> expr SEMI .)
    DEF             reduce using rule 7 (stmt -> expr SEMI .)
    LENGTH          reduce using rule 7 (stmt -> expr SEMI .)
    SCAN            reduce using rule 7 (stmt -> expr SEMI .)
    PRINT           reduce using rule 7 (stmt -> expr SEMI .)
    LPAREN          reduce using rule 7 (stmt -> expr SEMI .)
    EXIT            reduce using rule 7 (stmt -> expr SEMI .)
    RBRACE          reduce using rule 7 (stmt -> expr SEMI .)
    ELSE            reduce using rule 7 (stmt -> expr SEMI .)


state 55

    (25) expr -> expr QUESTIONMARK . expr COLON expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 91
    builtin_methods                shift and go to state 38

state 56

    (27) expr -> expr LBLOCK . expr RBLOCK
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 92
    builtin_methods                shift and go to state 38

state 57

    (29) expr -> expr ADD . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 93
    builtin_methods                shift and go to state 38

state 58

    (30) expr -> expr SUB . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 94
    builtin_methods                shift and go to state 38

state 59

    (31) expr -> expr MULT . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 95
    builtin_methods                shift and go to state 38

state 60

    (32) expr -> expr DIV . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 96
    builtin_methods                shift and go to state 38

state 61

    (33) expr -> expr MOD . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 97
    builtin_methods                shift and go to state 38

state 62

    (34) expr -> expr GREATER . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 98
    builtin_methods                shift and go to state 38

state 63

    (35) expr -> expr LESS . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 99
    builtin_methods                shift and go to state 38

state 64

    (36) expr -> expr EQUAL . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 100
    builtin_methods                shift and go to state 38

state 65

    (37) expr -> expr GREATEREQ . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 101
    builtin_methods                shift and go to state 38

state 66

    (38) expr -> expr LESSEQ . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 102
    builtin_methods                shift and go to state 38

state 67

    (39) expr -> expr NOTEQUAL . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 103
    builtin_methods                shift and go to state 38

state 68

    (40) expr -> expr OR . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 104
    builtin_methods                shift and go to state 38

state 69

    (41) expr -> expr AND . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 105
    builtin_methods                shift and go to state 38

state 70

    (8) stmt -> defvar SEMI .

    RETURN          reduce using rule 8 (stmt -> defvar SEMI .)
    LBRACE          reduce using rule 8 (stmt -> defvar SEMI .)
    ID              reduce using rule 8 (stmt -> defvar SEMI .)
    LBLOCK          reduce using rule 8 (stmt -> defvar SEMI .)
    NOT             reduce using rule 8 (stmt -> defvar SEMI .)
    ADD             reduce using rule 8 (stmt -> defvar SEMI .)
    SUB             reduce using rule 8 (stmt -> defvar SEMI .)
    INT             reduce using rule 8 (stmt -> defvar SEMI .)
    STRING          reduce using rule 8 (stmt -> defvar SEMI .)
    VAR             reduce using rule 8 (stmt -> defvar SEMI .)
    IF              reduce using rule 8 (stmt -> defvar SEMI .)
    WHILE           reduce using rule 8 (stmt -> defvar SEMI .)
    FOR             reduce using rule 8 (stmt -> defvar SEMI .)
    DEF             reduce using rule 8 (stmt -> defvar SEMI .)
    LENGTH          reduce using rule 8 (stmt -> defvar SEMI .)
    SCAN            reduce using rule 8 (stmt -> defvar SEMI .)
    PRINT           reduce using rule 8 (stmt -> defvar SEMI .)
    LPAREN          reduce using rule 8 (stmt -> defvar SEMI .)
    EXIT            reduce using rule 8 (stmt -> defvar SEMI .)
    RBRACE          reduce using rule 8 (stmt -> defvar SEMI .)
    ELSE            reduce using rule 8 (stmt -> defvar SEMI .)


state 71

    (13) stmt -> RETURN expr . SEMI
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            shift and go to state 106
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 72

    (28) expr -> LBLOCK clist . RBLOCK

    RBLOCK          shift and go to state 107


state 73

    (50) clist -> expr .
    (51) clist -> expr . COMMA clist
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RBLOCK          reduce using rule 50 (clist -> expr .)
    RPAREN          reduce using rule 50 (clist -> expr .)
    COMMA           shift and go to state 108
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 74

    (52) clist -> empty .

    RBLOCK          reduce using rule 52 (clist -> empty .)
    RPAREN          reduce using rule 52 (clist -> empty .)


state 75

    (44) expr -> ADD expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 44 (expr -> ADD expr .)
    QUESTIONMARK    reduce using rule 44 (expr -> ADD expr .)
    ADD             reduce using rule 44 (expr -> ADD expr .)
    SUB             reduce using rule 44 (expr -> ADD expr .)
    GREATER         reduce using rule 44 (expr -> ADD expr .)
    LESS            reduce using rule 44 (expr -> ADD expr .)
    EQUAL           reduce using rule 44 (expr -> ADD expr .)
    GREATEREQ       reduce using rule 44 (expr -> ADD expr .)
    LESSEQ          reduce using rule 44 (expr -> ADD expr .)
    NOTEQUAL        reduce using rule 44 (expr -> ADD expr .)
    OR              reduce using rule 44 (expr -> ADD expr .)
    AND             reduce using rule 44 (expr -> ADD expr .)
    RPAREN          reduce using rule 44 (expr -> ADD expr .)
    COMMA           reduce using rule 44 (expr -> ADD expr .)
    RBLOCK          reduce using rule 44 (expr -> ADD expr .)
    COLON           reduce using rule 44 (expr -> ADD expr .)
    TO              reduce using rule 44 (expr -> ADD expr .)
    LBLOCK          shift and go to state 56
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 44 (expr -> ADD expr .) ]
  ! MULT            [ reduce using rule 44 (expr -> ADD expr .) ]
  ! DIV             [ reduce using rule 44 (expr -> ADD expr .) ]
  ! MOD             [ reduce using rule 44 (expr -> ADD expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 76

    (45) expr -> SUB expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 45 (expr -> SUB expr .)
    QUESTIONMARK    reduce using rule 45 (expr -> SUB expr .)
    ADD             reduce using rule 45 (expr -> SUB expr .)
    SUB             reduce using rule 45 (expr -> SUB expr .)
    GREATER         reduce using rule 45 (expr -> SUB expr .)
    LESS            reduce using rule 45 (expr -> SUB expr .)
    EQUAL           reduce using rule 45 (expr -> SUB expr .)
    GREATEREQ       reduce using rule 45 (expr -> SUB expr .)
    LESSEQ          reduce using rule 45 (expr -> SUB expr .)
    NOTEQUAL        reduce using rule 45 (expr -> SUB expr .)
    OR              reduce using rule 45 (expr -> SUB expr .)
    AND             reduce using rule 45 (expr -> SUB expr .)
    RPAREN          reduce using rule 45 (expr -> SUB expr .)
    COMMA           reduce using rule 45 (expr -> SUB expr .)
    RBLOCK          reduce using rule 45 (expr -> SUB expr .)
    COLON           reduce using rule 45 (expr -> SUB expr .)
    TO              reduce using rule 45 (expr -> SUB expr .)
    LBLOCK          shift and go to state 56
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 45 (expr -> SUB expr .) ]
  ! MULT            [ reduce using rule 45 (expr -> SUB expr .) ]
  ! DIV             [ reduce using rule 45 (expr -> SUB expr .) ]
  ! MOD             [ reduce using rule 45 (expr -> SUB expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 77

    (43) expr -> NOT expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 43 (expr -> NOT expr .)
    QUESTIONMARK    reduce using rule 43 (expr -> NOT expr .)
    OR              reduce using rule 43 (expr -> NOT expr .)
    AND             reduce using rule 43 (expr -> NOT expr .)
    RPAREN          reduce using rule 43 (expr -> NOT expr .)
    COMMA           reduce using rule 43 (expr -> NOT expr .)
    RBLOCK          reduce using rule 43 (expr -> NOT expr .)
    COLON           reduce using rule 43 (expr -> NOT expr .)
    TO              reduce using rule 43 (expr -> NOT expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67

  ! LBLOCK          [ reduce using rule 43 (expr -> NOT expr .) ]
  ! ADD             [ reduce using rule 43 (expr -> NOT expr .) ]
  ! SUB             [ reduce using rule 43 (expr -> NOT expr .) ]
  ! MULT            [ reduce using rule 43 (expr -> NOT expr .) ]
  ! DIV             [ reduce using rule 43 (expr -> NOT expr .) ]
  ! MOD             [ reduce using rule 43 (expr -> NOT expr .) ]
  ! GREATER         [ reduce using rule 43 (expr -> NOT expr .) ]
  ! LESS            [ reduce using rule 43 (expr -> NOT expr .) ]
  ! EQUAL           [ reduce using rule 43 (expr -> NOT expr .) ]
  ! GREATEREQ       [ reduce using rule 43 (expr -> NOT expr .) ]
  ! LESSEQ          [ reduce using rule 43 (expr -> NOT expr .) ]
  ! NOTEQUAL        [ reduce using rule 43 (expr -> NOT expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 78

    (20) defvar -> VAR TYPE . ID
    (21) defvar -> VAR TYPE . ID ASSIGN expr

    ID              shift and go to state 109


state 79

    (16) if_statement -> IF LPAREN . expr RPAREN stmt
    (17) ifelse_statement -> IF LPAREN . expr RPAREN stmt ELSE stmt
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 110
    builtin_methods                shift and go to state 38

state 80

    (18) while_statement -> WHILE LPAREN . expr RPAREN stmt
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 111
    builtin_methods                shift and go to state 38

state 81

    (19) for_statement -> FOR LPAREN . ID EQUAL expr TO expr RPAREN stmt

    ID              shift and go to state 112


state 82

    (58) builtin_methods -> LENGTH LPAREN . expr RPAREN
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 113
    builtin_methods                shift and go to state 38

state 83

    (59) builtin_methods -> SCAN LPAREN . RPAREN

    RPAREN          shift and go to state 114


state 84

    (60) builtin_methods -> PRINT LPAREN . expr RPAREN
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 115
    builtin_methods                shift and go to state 38

state 85

    (62) builtin_methods -> EXIT LPAREN . expr RPAREN
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 116
    builtin_methods                shift and go to state 38

state 86

    (4) func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .

    DEF             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    $end            reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    RETURN          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    LBRACE          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    ID              reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    LBLOCK          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    NOT             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    ADD             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    SUB             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    INT             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    STRING          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    VAR             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    IF              reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    WHILE           reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    FOR             reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    LENGTH          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    SCAN            reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    PRINT           reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    LPAREN          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    EXIT            reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    RBRACE          reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)
    ELSE            reduce using rule 4 (func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI .)


state 87

    (26) expr -> ID LPAREN clist . RPAREN

    RPAREN          shift and go to state 117


state 88

    (42) expr -> ID ASSIGN expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 42 (expr -> ID ASSIGN expr .)
    QUESTIONMARK    reduce using rule 42 (expr -> ID ASSIGN expr .)
    RPAREN          reduce using rule 42 (expr -> ID ASSIGN expr .)
    COMMA           reduce using rule 42 (expr -> ID ASSIGN expr .)
    RBLOCK          reduce using rule 42 (expr -> ID ASSIGN expr .)
    COLON           reduce using rule 42 (expr -> ID ASSIGN expr .)
    TO              reduce using rule 42 (expr -> ID ASSIGN expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69

  ! LBLOCK          [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! ADD             [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! SUB             [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! MULT            [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! DIV             [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! MOD             [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! LESS            [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! EQUAL           [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! GREATEREQ       [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! LESSEQ          [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! OR              [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! AND             [ reduce using rule 42 (expr -> ID ASSIGN expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]


state 89

    (61) builtin_methods -> LPAREN expr RPAREN .

    SEMI            reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    QUESTIONMARK    reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    LBLOCK          reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    ADD             reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    SUB             reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    MULT            reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    DIV             reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    MOD             reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    GREATER         reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    LESS            reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    EQUAL           reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    GREATEREQ       reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    LESSEQ          reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    NOTEQUAL        reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    OR              reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    AND             reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    RBLOCK          reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    COLON           reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)
    TO              reduce using rule 61 (builtin_methods -> LPAREN expr RPAREN .)


state 90

    (14) stmt -> LBRACE body RBRACE .

    RETURN          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    LBRACE          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    ID              reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    LBLOCK          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    NOT             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    ADD             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    SUB             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    INT             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    STRING          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    VAR             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    IF              reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    WHILE           reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    FOR             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    DEF             reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    LENGTH          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    SCAN            reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    PRINT           reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    LPAREN          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    EXIT            reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    RBRACE          reduce using rule 14 (stmt -> LBRACE body RBRACE .)
    ELSE            reduce using rule 14 (stmt -> LBRACE body RBRACE .)


state 91

    (25) expr -> expr QUESTIONMARK expr . COLON expr
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    COLON           shift and go to state 118
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 92

    (27) expr -> expr LBLOCK expr . RBLOCK
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RBLOCK          shift and go to state 119
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 93

    (29) expr -> expr ADD expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 29 (expr -> expr ADD expr .)
    QUESTIONMARK    reduce using rule 29 (expr -> expr ADD expr .)
    ADD             reduce using rule 29 (expr -> expr ADD expr .)
    SUB             reduce using rule 29 (expr -> expr ADD expr .)
    GREATER         reduce using rule 29 (expr -> expr ADD expr .)
    LESS            reduce using rule 29 (expr -> expr ADD expr .)
    EQUAL           reduce using rule 29 (expr -> expr ADD expr .)
    GREATEREQ       reduce using rule 29 (expr -> expr ADD expr .)
    LESSEQ          reduce using rule 29 (expr -> expr ADD expr .)
    NOTEQUAL        reduce using rule 29 (expr -> expr ADD expr .)
    OR              reduce using rule 29 (expr -> expr ADD expr .)
    AND             reduce using rule 29 (expr -> expr ADD expr .)
    RPAREN          reduce using rule 29 (expr -> expr ADD expr .)
    COMMA           reduce using rule 29 (expr -> expr ADD expr .)
    RBLOCK          reduce using rule 29 (expr -> expr ADD expr .)
    COLON           reduce using rule 29 (expr -> expr ADD expr .)
    TO              reduce using rule 29 (expr -> expr ADD expr .)
    LBLOCK          shift and go to state 56
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 29 (expr -> expr ADD expr .) ]
  ! MULT            [ reduce using rule 29 (expr -> expr ADD expr .) ]
  ! DIV             [ reduce using rule 29 (expr -> expr ADD expr .) ]
  ! MOD             [ reduce using rule 29 (expr -> expr ADD expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 94

    (30) expr -> expr SUB expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 30 (expr -> expr SUB expr .)
    QUESTIONMARK    reduce using rule 30 (expr -> expr SUB expr .)
    ADD             reduce using rule 30 (expr -> expr SUB expr .)
    SUB             reduce using rule 30 (expr -> expr SUB expr .)
    GREATER         reduce using rule 30 (expr -> expr SUB expr .)
    LESS            reduce using rule 30 (expr -> expr SUB expr .)
    EQUAL           reduce using rule 30 (expr -> expr SUB expr .)
    GREATEREQ       reduce using rule 30 (expr -> expr SUB expr .)
    LESSEQ          reduce using rule 30 (expr -> expr SUB expr .)
    NOTEQUAL        reduce using rule 30 (expr -> expr SUB expr .)
    OR              reduce using rule 30 (expr -> expr SUB expr .)
    AND             reduce using rule 30 (expr -> expr SUB expr .)
    RPAREN          reduce using rule 30 (expr -> expr SUB expr .)
    COMMA           reduce using rule 30 (expr -> expr SUB expr .)
    RBLOCK          reduce using rule 30 (expr -> expr SUB expr .)
    COLON           reduce using rule 30 (expr -> expr SUB expr .)
    TO              reduce using rule 30 (expr -> expr SUB expr .)
    LBLOCK          shift and go to state 56
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 30 (expr -> expr SUB expr .) ]
  ! MULT            [ reduce using rule 30 (expr -> expr SUB expr .) ]
  ! DIV             [ reduce using rule 30 (expr -> expr SUB expr .) ]
  ! MOD             [ reduce using rule 30 (expr -> expr SUB expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 95

    (31) expr -> expr MULT expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 31 (expr -> expr MULT expr .)
    QUESTIONMARK    reduce using rule 31 (expr -> expr MULT expr .)
    ADD             reduce using rule 31 (expr -> expr MULT expr .)
    SUB             reduce using rule 31 (expr -> expr MULT expr .)
    MULT            reduce using rule 31 (expr -> expr MULT expr .)
    DIV             reduce using rule 31 (expr -> expr MULT expr .)
    MOD             reduce using rule 31 (expr -> expr MULT expr .)
    GREATER         reduce using rule 31 (expr -> expr MULT expr .)
    LESS            reduce using rule 31 (expr -> expr MULT expr .)
    EQUAL           reduce using rule 31 (expr -> expr MULT expr .)
    GREATEREQ       reduce using rule 31 (expr -> expr MULT expr .)
    LESSEQ          reduce using rule 31 (expr -> expr MULT expr .)
    NOTEQUAL        reduce using rule 31 (expr -> expr MULT expr .)
    OR              reduce using rule 31 (expr -> expr MULT expr .)
    AND             reduce using rule 31 (expr -> expr MULT expr .)
    RPAREN          reduce using rule 31 (expr -> expr MULT expr .)
    COMMA           reduce using rule 31 (expr -> expr MULT expr .)
    RBLOCK          reduce using rule 31 (expr -> expr MULT expr .)
    COLON           reduce using rule 31 (expr -> expr MULT expr .)
    TO              reduce using rule 31 (expr -> expr MULT expr .)
    LBLOCK          shift and go to state 56

  ! LBLOCK          [ reduce using rule 31 (expr -> expr MULT expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! MULT            [ shift and go to state 59 ]
  ! DIV             [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 96

    (32) expr -> expr DIV expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 32 (expr -> expr DIV expr .)
    QUESTIONMARK    reduce using rule 32 (expr -> expr DIV expr .)
    ADD             reduce using rule 32 (expr -> expr DIV expr .)
    SUB             reduce using rule 32 (expr -> expr DIV expr .)
    MULT            reduce using rule 32 (expr -> expr DIV expr .)
    DIV             reduce using rule 32 (expr -> expr DIV expr .)
    MOD             reduce using rule 32 (expr -> expr DIV expr .)
    GREATER         reduce using rule 32 (expr -> expr DIV expr .)
    LESS            reduce using rule 32 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 32 (expr -> expr DIV expr .)
    GREATEREQ       reduce using rule 32 (expr -> expr DIV expr .)
    LESSEQ          reduce using rule 32 (expr -> expr DIV expr .)
    NOTEQUAL        reduce using rule 32 (expr -> expr DIV expr .)
    OR              reduce using rule 32 (expr -> expr DIV expr .)
    AND             reduce using rule 32 (expr -> expr DIV expr .)
    RPAREN          reduce using rule 32 (expr -> expr DIV expr .)
    COMMA           reduce using rule 32 (expr -> expr DIV expr .)
    RBLOCK          reduce using rule 32 (expr -> expr DIV expr .)
    COLON           reduce using rule 32 (expr -> expr DIV expr .)
    TO              reduce using rule 32 (expr -> expr DIV expr .)
    LBLOCK          shift and go to state 56

  ! LBLOCK          [ reduce using rule 32 (expr -> expr DIV expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! MULT            [ shift and go to state 59 ]
  ! DIV             [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 97

    (33) expr -> expr MOD expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 33 (expr -> expr MOD expr .)
    QUESTIONMARK    reduce using rule 33 (expr -> expr MOD expr .)
    ADD             reduce using rule 33 (expr -> expr MOD expr .)
    SUB             reduce using rule 33 (expr -> expr MOD expr .)
    MOD             reduce using rule 33 (expr -> expr MOD expr .)
    GREATER         reduce using rule 33 (expr -> expr MOD expr .)
    LESS            reduce using rule 33 (expr -> expr MOD expr .)
    EQUAL           reduce using rule 33 (expr -> expr MOD expr .)
    GREATEREQ       reduce using rule 33 (expr -> expr MOD expr .)
    LESSEQ          reduce using rule 33 (expr -> expr MOD expr .)
    NOTEQUAL        reduce using rule 33 (expr -> expr MOD expr .)
    OR              reduce using rule 33 (expr -> expr MOD expr .)
    AND             reduce using rule 33 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 33 (expr -> expr MOD expr .)
    COMMA           reduce using rule 33 (expr -> expr MOD expr .)
    RBLOCK          reduce using rule 33 (expr -> expr MOD expr .)
    COLON           reduce using rule 33 (expr -> expr MOD expr .)
    TO              reduce using rule 33 (expr -> expr MOD expr .)
    LBLOCK          shift and go to state 56
    MULT            shift and go to state 59
    DIV             shift and go to state 60

  ! LBLOCK          [ reduce using rule 33 (expr -> expr MOD expr .) ]
  ! MULT            [ reduce using rule 33 (expr -> expr MOD expr .) ]
  ! DIV             [ reduce using rule 33 (expr -> expr MOD expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! ADD             [ shift and go to state 57 ]
  ! SUB             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 61 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 98

    (34) expr -> expr GREATER expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 34 (expr -> expr GREATER expr .)
    QUESTIONMARK    reduce using rule 34 (expr -> expr GREATER expr .)
    GREATER         reduce using rule 34 (expr -> expr GREATER expr .)
    LESS            reduce using rule 34 (expr -> expr GREATER expr .)
    EQUAL           reduce using rule 34 (expr -> expr GREATER expr .)
    GREATEREQ       reduce using rule 34 (expr -> expr GREATER expr .)
    LESSEQ          reduce using rule 34 (expr -> expr GREATER expr .)
    NOTEQUAL        reduce using rule 34 (expr -> expr GREATER expr .)
    OR              reduce using rule 34 (expr -> expr GREATER expr .)
    AND             reduce using rule 34 (expr -> expr GREATER expr .)
    RPAREN          reduce using rule 34 (expr -> expr GREATER expr .)
    COMMA           reduce using rule 34 (expr -> expr GREATER expr .)
    RBLOCK          reduce using rule 34 (expr -> expr GREATER expr .)
    COLON           reduce using rule 34 (expr -> expr GREATER expr .)
    TO              reduce using rule 34 (expr -> expr GREATER expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! ADD             [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! SUB             [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! MULT            [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! DIV             [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! MOD             [ reduce using rule 34 (expr -> expr GREATER expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 99

    (35) expr -> expr LESS expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 35 (expr -> expr LESS expr .)
    QUESTIONMARK    reduce using rule 35 (expr -> expr LESS expr .)
    GREATER         reduce using rule 35 (expr -> expr LESS expr .)
    LESS            reduce using rule 35 (expr -> expr LESS expr .)
    EQUAL           reduce using rule 35 (expr -> expr LESS expr .)
    GREATEREQ       reduce using rule 35 (expr -> expr LESS expr .)
    LESSEQ          reduce using rule 35 (expr -> expr LESS expr .)
    NOTEQUAL        reduce using rule 35 (expr -> expr LESS expr .)
    OR              reduce using rule 35 (expr -> expr LESS expr .)
    AND             reduce using rule 35 (expr -> expr LESS expr .)
    RPAREN          reduce using rule 35 (expr -> expr LESS expr .)
    COMMA           reduce using rule 35 (expr -> expr LESS expr .)
    RBLOCK          reduce using rule 35 (expr -> expr LESS expr .)
    COLON           reduce using rule 35 (expr -> expr LESS expr .)
    TO              reduce using rule 35 (expr -> expr LESS expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! ADD             [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! SUB             [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! MULT            [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! DIV             [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! MOD             [ reduce using rule 35 (expr -> expr LESS expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 100

    (36) expr -> expr EQUAL expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 36 (expr -> expr EQUAL expr .)
    QUESTIONMARK    reduce using rule 36 (expr -> expr EQUAL expr .)
    GREATER         reduce using rule 36 (expr -> expr EQUAL expr .)
    LESS            reduce using rule 36 (expr -> expr EQUAL expr .)
    EQUAL           reduce using rule 36 (expr -> expr EQUAL expr .)
    GREATEREQ       reduce using rule 36 (expr -> expr EQUAL expr .)
    LESSEQ          reduce using rule 36 (expr -> expr EQUAL expr .)
    NOTEQUAL        reduce using rule 36 (expr -> expr EQUAL expr .)
    OR              reduce using rule 36 (expr -> expr EQUAL expr .)
    AND             reduce using rule 36 (expr -> expr EQUAL expr .)
    RPAREN          reduce using rule 36 (expr -> expr EQUAL expr .)
    COMMA           reduce using rule 36 (expr -> expr EQUAL expr .)
    RBLOCK          reduce using rule 36 (expr -> expr EQUAL expr .)
    COLON           reduce using rule 36 (expr -> expr EQUAL expr .)
    TO              reduce using rule 36 (expr -> expr EQUAL expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! ADD             [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! SUB             [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! MULT            [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! DIV             [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! MOD             [ reduce using rule 36 (expr -> expr EQUAL expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 101

    (37) expr -> expr GREATEREQ expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 37 (expr -> expr GREATEREQ expr .)
    QUESTIONMARK    reduce using rule 37 (expr -> expr GREATEREQ expr .)
    GREATER         reduce using rule 37 (expr -> expr GREATEREQ expr .)
    LESS            reduce using rule 37 (expr -> expr GREATEREQ expr .)
    EQUAL           reduce using rule 37 (expr -> expr GREATEREQ expr .)
    GREATEREQ       reduce using rule 37 (expr -> expr GREATEREQ expr .)
    LESSEQ          reduce using rule 37 (expr -> expr GREATEREQ expr .)
    NOTEQUAL        reduce using rule 37 (expr -> expr GREATEREQ expr .)
    OR              reduce using rule 37 (expr -> expr GREATEREQ expr .)
    AND             reduce using rule 37 (expr -> expr GREATEREQ expr .)
    RPAREN          reduce using rule 37 (expr -> expr GREATEREQ expr .)
    COMMA           reduce using rule 37 (expr -> expr GREATEREQ expr .)
    RBLOCK          reduce using rule 37 (expr -> expr GREATEREQ expr .)
    COLON           reduce using rule 37 (expr -> expr GREATEREQ expr .)
    TO              reduce using rule 37 (expr -> expr GREATEREQ expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! ADD             [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! SUB             [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! MULT            [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! DIV             [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! MOD             [ reduce using rule 37 (expr -> expr GREATEREQ expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 102

    (38) expr -> expr LESSEQ expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 38 (expr -> expr LESSEQ expr .)
    QUESTIONMARK    reduce using rule 38 (expr -> expr LESSEQ expr .)
    GREATER         reduce using rule 38 (expr -> expr LESSEQ expr .)
    LESS            reduce using rule 38 (expr -> expr LESSEQ expr .)
    EQUAL           reduce using rule 38 (expr -> expr LESSEQ expr .)
    GREATEREQ       reduce using rule 38 (expr -> expr LESSEQ expr .)
    LESSEQ          reduce using rule 38 (expr -> expr LESSEQ expr .)
    NOTEQUAL        reduce using rule 38 (expr -> expr LESSEQ expr .)
    OR              reduce using rule 38 (expr -> expr LESSEQ expr .)
    AND             reduce using rule 38 (expr -> expr LESSEQ expr .)
    RPAREN          reduce using rule 38 (expr -> expr LESSEQ expr .)
    COMMA           reduce using rule 38 (expr -> expr LESSEQ expr .)
    RBLOCK          reduce using rule 38 (expr -> expr LESSEQ expr .)
    COLON           reduce using rule 38 (expr -> expr LESSEQ expr .)
    TO              reduce using rule 38 (expr -> expr LESSEQ expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! ADD             [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! SUB             [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! MULT            [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! DIV             [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! MOD             [ reduce using rule 38 (expr -> expr LESSEQ expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 103

    (39) expr -> expr NOTEQUAL expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    QUESTIONMARK    reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    GREATER         reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    LESS            reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    EQUAL           reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    GREATEREQ       reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    LESSEQ          reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    NOTEQUAL        reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    OR              reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    AND             reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    RPAREN          reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    COMMA           reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    RBLOCK          reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    COLON           reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    TO              reduce using rule 39 (expr -> expr NOTEQUAL expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61

  ! LBLOCK          [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! ADD             [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! SUB             [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! MULT            [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! DIV             [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! MOD             [ reduce using rule 39 (expr -> expr NOTEQUAL expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! GREATEREQ       [ shift and go to state 65 ]
  ! LESSEQ          [ shift and go to state 66 ]
  ! NOTEQUAL        [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 104

    (40) expr -> expr OR expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 40 (expr -> expr OR expr .)
    QUESTIONMARK    reduce using rule 40 (expr -> expr OR expr .)
    OR              reduce using rule 40 (expr -> expr OR expr .)
    RPAREN          reduce using rule 40 (expr -> expr OR expr .)
    COMMA           reduce using rule 40 (expr -> expr OR expr .)
    RBLOCK          reduce using rule 40 (expr -> expr OR expr .)
    COLON           reduce using rule 40 (expr -> expr OR expr .)
    TO              reduce using rule 40 (expr -> expr OR expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    AND             shift and go to state 69

  ! LBLOCK          [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! ADD             [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! SUB             [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! MULT            [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! MOD             [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! GREATER         [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! LESS            [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! EQUAL           [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! GREATEREQ       [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! LESSEQ          [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! AND             [ reduce using rule 40 (expr -> expr OR expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! OR              [ shift and go to state 68 ]


state 105

    (41) expr -> expr AND expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 41 (expr -> expr AND expr .)
    QUESTIONMARK    reduce using rule 41 (expr -> expr AND expr .)
    OR              reduce using rule 41 (expr -> expr AND expr .)
    AND             reduce using rule 41 (expr -> expr AND expr .)
    RPAREN          reduce using rule 41 (expr -> expr AND expr .)
    COMMA           reduce using rule 41 (expr -> expr AND expr .)
    RBLOCK          reduce using rule 41 (expr -> expr AND expr .)
    COLON           reduce using rule 41 (expr -> expr AND expr .)
    TO              reduce using rule 41 (expr -> expr AND expr .)
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67

  ! LBLOCK          [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! ADD             [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! SUB             [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! MULT            [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! DIV             [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! MOD             [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! GREATER         [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! LESS            [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! EQUAL           [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! GREATEREQ       [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! LESSEQ          [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expr -> expr AND expr .) ]
  ! QUESTIONMARK    [ shift and go to state 55 ]
  ! OR              [ shift and go to state 68 ]
  ! AND             [ shift and go to state 69 ]


state 106

    (13) stmt -> RETURN expr SEMI .

    RETURN          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    LBRACE          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    ID              reduce using rule 13 (stmt -> RETURN expr SEMI .)
    LBLOCK          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    NOT             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    ADD             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    SUB             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    INT             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    STRING          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    VAR             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    IF              reduce using rule 13 (stmt -> RETURN expr SEMI .)
    WHILE           reduce using rule 13 (stmt -> RETURN expr SEMI .)
    FOR             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    DEF             reduce using rule 13 (stmt -> RETURN expr SEMI .)
    LENGTH          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    SCAN            reduce using rule 13 (stmt -> RETURN expr SEMI .)
    PRINT           reduce using rule 13 (stmt -> RETURN expr SEMI .)
    LPAREN          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    EXIT            reduce using rule 13 (stmt -> RETURN expr SEMI .)
    RBRACE          reduce using rule 13 (stmt -> RETURN expr SEMI .)
    ELSE            reduce using rule 13 (stmt -> RETURN expr SEMI .)


state 107

    (28) expr -> LBLOCK clist RBLOCK .

    SEMI            reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    QUESTIONMARK    reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    LBLOCK          reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    ADD             reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    SUB             reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    MULT            reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    DIV             reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    MOD             reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    GREATER         reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    LESS            reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    EQUAL           reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    GREATEREQ       reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    LESSEQ          reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    NOTEQUAL        reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    OR              reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    AND             reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    RPAREN          reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    COMMA           reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    RBLOCK          reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    COLON           reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)
    TO              reduce using rule 28 (expr -> LBLOCK clist RBLOCK .)


state 108

    (51) clist -> expr COMMA . clist
    (50) clist -> . expr
    (51) clist -> . expr COMMA clist
    (52) clist -> . empty
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (57) empty -> .
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    RBLOCK          reduce using rule 57 (empty -> .)
    RPAREN          reduce using rule 57 (empty -> .)
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 73
    clist                          shift and go to state 120
    empty                          shift and go to state 74
    builtin_methods                shift and go to state 38

state 109

    (20) defvar -> VAR TYPE ID .
    (21) defvar -> VAR TYPE ID . ASSIGN expr

    SEMI            reduce using rule 20 (defvar -> VAR TYPE ID .)
    ASSIGN          shift and go to state 121


state 110

    (16) if_statement -> IF LPAREN expr . RPAREN stmt
    (17) ifelse_statement -> IF LPAREN expr . RPAREN stmt ELSE stmt
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 122
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 111

    (18) while_statement -> WHILE LPAREN expr . RPAREN stmt
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 123
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 112

    (19) for_statement -> FOR LPAREN ID . EQUAL expr TO expr RPAREN stmt

    EQUAL           shift and go to state 124


state 113

    (58) builtin_methods -> LENGTH LPAREN expr . RPAREN
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 125
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 114

    (59) builtin_methods -> SCAN LPAREN RPAREN .

    SEMI            reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    QUESTIONMARK    reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    LBLOCK          reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    ADD             reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    SUB             reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    MULT            reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    DIV             reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    MOD             reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    GREATER         reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    LESS            reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    EQUAL           reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    GREATEREQ       reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    LESSEQ          reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    OR              reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    AND             reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    RPAREN          reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    COMMA           reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    RBLOCK          reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    COLON           reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)
    TO              reduce using rule 59 (builtin_methods -> SCAN LPAREN RPAREN .)


state 115

    (60) builtin_methods -> PRINT LPAREN expr . RPAREN
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 126
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 116

    (62) builtin_methods -> EXIT LPAREN expr . RPAREN
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 127
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 117

    (26) expr -> ID LPAREN clist RPAREN .

    SEMI            reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    QUESTIONMARK    reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    LBLOCK          reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    ADD             reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    SUB             reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    MULT            reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    DIV             reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    MOD             reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    GREATER         reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    LESS            reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    EQUAL           reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    GREATEREQ       reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    LESSEQ          reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    NOTEQUAL        reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    OR              reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    AND             reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    RPAREN          reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    COMMA           reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    RBLOCK          reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    COLON           reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)
    TO              reduce using rule 26 (expr -> ID LPAREN clist RPAREN .)


state 118

    (25) expr -> expr QUESTIONMARK expr COLON . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 128
    builtin_methods                shift and go to state 38

state 119

    (27) expr -> expr LBLOCK expr RBLOCK .

    SEMI            reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    QUESTIONMARK    reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    LBLOCK          reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    ADD             reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    SUB             reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    MULT            reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    DIV             reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    MOD             reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    GREATER         reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    LESS            reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    EQUAL           reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    GREATEREQ       reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    LESSEQ          reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    NOTEQUAL        reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    OR              reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    AND             reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    RPAREN          reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    COMMA           reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    RBLOCK          reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    COLON           reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)
    TO              reduce using rule 27 (expr -> expr LBLOCK expr RBLOCK .)


state 120

    (51) clist -> expr COMMA clist .

    RBLOCK          reduce using rule 51 (clist -> expr COMMA clist .)
    RPAREN          reduce using rule 51 (clist -> expr COMMA clist .)


state 121

    (21) defvar -> VAR TYPE ID ASSIGN . expr
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 129
    builtin_methods                shift and go to state 38

state 122

    (16) if_statement -> IF LPAREN expr RPAREN . stmt
    (17) ifelse_statement -> IF LPAREN expr RPAREN . stmt ELSE stmt
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 24
    stmt                           shift and go to state 130
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 123

    (18) while_statement -> WHILE LPAREN expr RPAREN . stmt
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 24
    stmt                           shift and go to state 131
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 124

    (19) for_statement -> FOR LPAREN ID EQUAL . expr TO expr RPAREN stmt
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 132
    builtin_methods                shift and go to state 38

state 125

    (58) builtin_methods -> LENGTH LPAREN expr RPAREN .

    SEMI            reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    QUESTIONMARK    reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    LBLOCK          reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    ADD             reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    SUB             reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    MULT            reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    DIV             reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    MOD             reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    GREATER         reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    LESS            reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    EQUAL           reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    GREATEREQ       reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    LESSEQ          reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    NOTEQUAL        reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    OR              reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    AND             reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    RPAREN          reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    COMMA           reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    RBLOCK          reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    COLON           reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)
    TO              reduce using rule 58 (builtin_methods -> LENGTH LPAREN expr RPAREN .)


state 126

    (60) builtin_methods -> PRINT LPAREN expr RPAREN .

    SEMI            reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    QUESTIONMARK    reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    LBLOCK          reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    ADD             reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    SUB             reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    MULT            reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    DIV             reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    MOD             reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    GREATER         reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    LESS            reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    EQUAL           reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    GREATEREQ       reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    LESSEQ          reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    NOTEQUAL        reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    OR              reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    AND             reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    RBLOCK          reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    COLON           reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)
    TO              reduce using rule 60 (builtin_methods -> PRINT LPAREN expr RPAREN .)


state 127

    (62) builtin_methods -> EXIT LPAREN expr RPAREN .

    SEMI            reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    QUESTIONMARK    reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    LBLOCK          reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    ADD             reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    SUB             reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    MULT            reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    DIV             reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    MOD             reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    GREATER         reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    LESS            reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    EQUAL           reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    GREATEREQ       reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    LESSEQ          reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    NOTEQUAL        reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    OR              reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    AND             reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    COMMA           reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    RBLOCK          reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    COLON           reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)
    TO              reduce using rule 62 (builtin_methods -> EXIT LPAREN expr RPAREN .)


state 128

    (25) expr -> expr QUESTIONMARK expr COLON expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

  ! shift/reduce conflict for QUESTIONMARK resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQ resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMI            reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    RPAREN          reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    COMMA           reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    RBLOCK          reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    COLON           reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    TO              reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .)
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69

  ! QUESTIONMARK    [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! LBLOCK          [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! ADD             [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! SUB             [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! MULT            [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! DIV             [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! MOD             [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! GREATER         [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! LESS            [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! EQUAL           [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! GREATEREQ       [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! LESSEQ          [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! OR              [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]
  ! AND             [ reduce using rule 25 (expr -> expr QUESTIONMARK expr COLON expr .) ]


state 129

    (21) defvar -> VAR TYPE ID ASSIGN expr .
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    SEMI            reduce using rule 21 (defvar -> VAR TYPE ID ASSIGN expr .)
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 130

    (16) if_statement -> IF LPAREN expr RPAREN stmt .
    (17) ifelse_statement -> IF LPAREN expr RPAREN stmt . ELSE stmt

  ! shift/reduce conflict for ELSE resolved as shift
    RETURN          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    LBRACE          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    ID              reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    LBLOCK          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    NOT             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    ADD             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    SUB             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    INT             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    STRING          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    VAR             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    IF              reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    WHILE           reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    FOR             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    DEF             reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    LENGTH          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    SCAN            reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    PRINT           reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    LPAREN          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    EXIT            reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    RBRACE          reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .)
    ELSE            shift and go to state 133

  ! ELSE            [ reduce using rule 16 (if_statement -> IF LPAREN expr RPAREN stmt .) ]


state 131

    (18) while_statement -> WHILE LPAREN expr RPAREN stmt .

    RETURN          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    LBRACE          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    ID              reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    LBLOCK          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    NOT             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    ADD             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    SUB             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    INT             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    STRING          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    VAR             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    IF              reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    WHILE           reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    FOR             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    DEF             reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    LENGTH          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    SCAN            reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    PRINT           reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    LPAREN          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    EXIT            reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    RBRACE          reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)
    ELSE            reduce using rule 18 (while_statement -> WHILE LPAREN expr RPAREN stmt .)


state 132

    (19) for_statement -> FOR LPAREN ID EQUAL expr . TO expr RPAREN stmt
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    TO              shift and go to state 134
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 133

    (17) ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE . stmt
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 24
    stmt                           shift and go to state 135
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 134

    (19) for_statement -> FOR LPAREN ID EQUAL expr TO . expr RPAREN stmt
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 136
    builtin_methods                shift and go to state 38

state 135

    (17) ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .

    RETURN          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    LBRACE          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ID              reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    LBLOCK          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    NOT             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ADD             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    SUB             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    INT             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    STRING          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    VAR             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    IF              reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    WHILE           reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    FOR             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    DEF             reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    LENGTH          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    SCAN            reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    PRINT           reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    LPAREN          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    EXIT            reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    RBRACE          reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ELSE            reduce using rule 17 (ifelse_statement -> IF LPAREN expr RPAREN stmt ELSE stmt .)


state 136

    (19) for_statement -> FOR LPAREN ID EQUAL expr TO expr . RPAREN stmt
    (25) expr -> expr . QUESTIONMARK expr COLON expr
    (27) expr -> expr . LBLOCK expr RBLOCK
    (29) expr -> expr . ADD expr
    (30) expr -> expr . SUB expr
    (31) expr -> expr . MULT expr
    (32) expr -> expr . DIV expr
    (33) expr -> expr . MOD expr
    (34) expr -> expr . GREATER expr
    (35) expr -> expr . LESS expr
    (36) expr -> expr . EQUAL expr
    (37) expr -> expr . GREATEREQ expr
    (38) expr -> expr . LESSEQ expr
    (39) expr -> expr . NOTEQUAL expr
    (40) expr -> expr . OR expr
    (41) expr -> expr . AND expr

    RPAREN          shift and go to state 137
    QUESTIONMARK    shift and go to state 55
    LBLOCK          shift and go to state 56
    ADD             shift and go to state 57
    SUB             shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    MOD             shift and go to state 61
    GREATER         shift and go to state 62
    LESS            shift and go to state 63
    EQUAL           shift and go to state 64
    GREATEREQ       shift and go to state 65
    LESSEQ          shift and go to state 66
    NOTEQUAL        shift and go to state 67
    OR              shift and go to state 68
    AND             shift and go to state 69


state 137

    (19) for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN . stmt
    (7) stmt -> . expr SEMI
    (8) stmt -> . defvar SEMI
    (9) stmt -> . if_statement
    (10) stmt -> . ifelse_statement
    (11) stmt -> . while_statement
    (12) stmt -> . for_statement
    (13) stmt -> . RETURN expr SEMI
    (14) stmt -> . LBRACE body RBRACE
    (15) stmt -> . func
    (25) expr -> . expr QUESTIONMARK expr COLON expr
    (26) expr -> . ID LPAREN clist RPAREN
    (27) expr -> . expr LBLOCK expr RBLOCK
    (28) expr -> . LBLOCK clist RBLOCK
    (29) expr -> . expr ADD expr
    (30) expr -> . expr SUB expr
    (31) expr -> . expr MULT expr
    (32) expr -> . expr DIV expr
    (33) expr -> . expr MOD expr
    (34) expr -> . expr GREATER expr
    (35) expr -> . expr LESS expr
    (36) expr -> . expr EQUAL expr
    (37) expr -> . expr GREATEREQ expr
    (38) expr -> . expr LESSEQ expr
    (39) expr -> . expr NOTEQUAL expr
    (40) expr -> . expr OR expr
    (41) expr -> . expr AND expr
    (42) expr -> . ID ASSIGN expr
    (43) expr -> . NOT expr
    (44) expr -> . ADD expr
    (45) expr -> . SUB expr
    (46) expr -> . ID
    (47) expr -> . INT
    (48) expr -> . STRING
    (49) expr -> . builtin_methods
    (20) defvar -> . VAR TYPE ID
    (21) defvar -> . VAR TYPE ID ASSIGN expr
    (16) if_statement -> . IF LPAREN expr RPAREN stmt
    (17) ifelse_statement -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (18) while_statement -> . WHILE LPAREN expr RPAREN stmt
    (19) for_statement -> . FOR LPAREN ID EQUAL expr TO expr RPAREN stmt
    (3) func -> . DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
    (4) func -> . DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
    (58) builtin_methods -> . LENGTH LPAREN expr RPAREN
    (59) builtin_methods -> . SCAN LPAREN RPAREN
    (60) builtin_methods -> . PRINT LPAREN expr RPAREN
    (61) builtin_methods -> . LPAREN expr RPAREN
    (62) builtin_methods -> . EXIT LPAREN expr RPAREN

    RETURN          shift and go to state 30
    LBRACE          shift and go to state 20
    ID              shift and go to state 18
    LBLOCK          shift and go to state 32
    NOT             shift and go to state 35
    ADD             shift and go to state 33
    SUB             shift and go to state 34
    INT             shift and go to state 36
    STRING          shift and go to state 37
    VAR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    FOR             shift and go to state 42
    DEF             shift and go to state 4
    LENGTH          shift and go to state 43
    SCAN            shift and go to state 44
    PRINT           shift and go to state 45
    LPAREN          shift and go to state 19
    EXIT            shift and go to state 46

    expr                           shift and go to state 24
    stmt                           shift and go to state 138
    defvar                         shift and go to state 25
    if_statement                   shift and go to state 26
    ifelse_statement               shift and go to state 27
    while_statement                shift and go to state 28
    for_statement                  shift and go to state 29
    func                           shift and go to state 31
    builtin_methods                shift and go to state 38

state 138

    (19) for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .

    RETURN          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    LBRACE          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    ID              reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    LBLOCK          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    NOT             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    ADD             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    SUB             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    INT             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    STRING          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    VAR             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    IF              reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    WHILE           reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    FOR             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    DEF             reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    LENGTH          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    SCAN            reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    PRINT           reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    LPAREN          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    EXIT            reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    RBRACE          reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)
    ELSE            reduce using rule 19 (for_statement -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for QUESTIONMARK in state 128 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 128 resolved as shift
WARNING: shift/reduce conflict for ADD in state 128 resolved as shift
WARNING: shift/reduce conflict for SUB in state 128 resolved as shift
WARNING: shift/reduce conflict for MULT in state 128 resolved as shift
WARNING: shift/reduce conflict for DIV in state 128 resolved as shift
WARNING: shift/reduce conflict for MOD in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 128 resolved as shift
WARNING: shift/reduce conflict for LESS in state 128 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATEREQ in state 128 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 128 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 130 resolved as shift
