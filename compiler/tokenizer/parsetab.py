
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftPRINTleftORleftANDleftNOTleftLESSLESSEQEQUALNOTEQUALGREATERGREATEREQleftADDSUBleftMODleftMULTDIVleftLBLOCKleftVECTORADD AND ASSIGN COLON COMMA DEF DIV ELSE EQUAL FOR GREATER GREATEREQ ID IF INT LBLOCK LBRACE LESS LESSEQ LPAREN MOD MULT NOT NOTEQUAL NULL OR PRINT QUESTIONMARK RBLOCK RBRACE RETURN RPAREN SEMI STRING SUB TO TYPE VAR VECTOR WHILEprog :\n    | func progfunc : DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE\n    | DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI\n    body :\n    | stmt body\n    stmt :    expr SEMI\n            | defvar SEMI\n            | IF LPAREN expr RPAREN stmt\n            | IF LPAREN expr RPAREN stmt ELSE stmt\n            | WHILE LPAREN expr RPAREN stmt\n            | FOR LPAREN ID EQUAL expr TO expr RPAREN stmt\n            | RETURN expr SEMI\n            | LBRACE body RBRACE\n            | func\n            | print_smt\n    defvar : VAR TYPE ID\n    | VAR TYPE ID ASSIGN expr\n    expr : expr LBLOCK expr RBLOCK\n    | LBLOCK clist RBLOCK\n    | expr QUESTIONMARK expr COLON expr\n    | expr ADD expr\n    | expr SUB expr\n    | expr MULT expr\n    | expr DIV expr\n    | expr MOD expr\n    | expr GREATER expr\n    | expr LESS expr\n    | expr EQUAL expr\n    | expr GREATEREQ expr\n    | expr LESSEQ expr\n    | expr NOTEQUAL expr\n    | expr OR expr\n    | expr AND expr\n    | NOT expr\n    | ADD expr\n    | SUB expr\n    | ID\n    | ID ASSIGN expr\n    | ID LPAREN clist RPAREN\n    | INT\n    | STRING\n    clist :\n    | expr\n    | expr COMMA clist\n    flist :\n    | TYPE ID\n    | TYPE ID COMMA flist\n    type : INT\n    | VECTOR\n    | NULL\n    | STRING\n    print_smt : PRINT LPAREN expr RPAREN SEMI %prec PRINT'
    
_lr_action_items = {'$end':([0,1,2,4,40,70,],[-1,0,-1,-2,-3,-4,]),'DEF':([0,2,13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[3,3,3,3,3,-15,-16,-3,-7,-8,-4,-14,-13,3,3,-9,-11,-53,3,-10,3,-12,]),'TYPE':([3,7,12,34,],[5,8,8,68,]),'ID':([5,8,13,14,17,19,25,26,27,28,29,30,31,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,68,69,70,73,92,94,99,100,101,102,104,107,108,111,112,113,114,116,117,],[6,10,16,16,16,16,16,-15,-16,16,16,16,16,16,16,-3,-7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-8,16,16,91,95,16,-4,-14,-13,16,16,16,16,16,16,-9,-11,-53,16,16,-10,16,-12,]),'LPAREN':([6,16,22,23,24,35,],[7,38,59,60,61,69,]),'RPAREN':([7,9,10,12,15,16,32,33,38,64,65,66,67,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,96,97,98,103,106,115,],[-46,11,-47,-46,-48,-38,-41,-42,-43,-44,-36,-37,-35,-39,97,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,100,101,-20,-43,105,-40,-19,-45,-21,116,]),'COMMA':([10,16,32,33,64,65,66,67,71,76,77,78,79,80,81,82,83,84,85,86,87,88,93,97,98,106,],[12,-38,-41,-42,94,-36,-37,-35,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-40,-19,-21,]),'LBRACE':([11,13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[13,17,17,17,-15,-16,-3,-7,-8,-4,-14,-13,17,17,-9,-11,-53,17,-10,17,-12,]),'RETURN':([11,13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[14,25,25,25,-15,-16,-3,-7,-8,-4,-14,-13,25,25,-9,-11,-53,25,-10,25,-12,]),'RBRACE':([13,17,18,19,26,27,39,40,41,42,58,70,73,92,107,108,111,114,117,],[-5,-5,40,-5,-15,-16,73,-3,-6,-7,-8,-4,-14,-13,-9,-11,-53,-10,-12,]),'IF':([13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[22,22,22,-15,-16,-3,-7,-8,-4,-14,-13,22,22,-9,-11,-53,22,-10,22,-12,]),'WHILE':([13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[23,23,23,-15,-16,-3,-7,-8,-4,-14,-13,23,23,-9,-11,-53,23,-10,23,-12,]),'FOR':([13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[24,24,24,-15,-16,-3,-7,-8,-4,-14,-13,24,24,-9,-11,-53,24,-10,24,-12,]),'LBLOCK':([13,14,16,17,19,20,25,26,27,28,29,30,31,32,33,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,],[28,28,-38,28,28,43,28,-15,-16,28,28,28,28,-41,-42,43,28,28,-3,-7,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-8,28,28,43,43,43,43,43,28,-4,43,-14,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-13,-20,28,43,-40,-19,28,28,28,28,28,43,-9,-11,43,43,-53,28,28,-10,43,28,-12,]),'NOT':([13,14,17,19,25,26,27,28,29,30,31,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,73,92,94,99,100,101,102,104,107,108,111,112,113,114,116,117,],[31,31,31,31,31,-15,-16,31,31,31,31,31,31,-3,-7,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-8,31,31,31,-4,-14,-13,31,31,31,31,31,31,-9,-11,-53,31,31,-10,31,-12,]),'ADD':([13,14,16,17,19,20,25,26,27,28,29,30,31,32,33,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,],[29,29,-38,29,29,45,29,-15,-16,29,29,29,29,-41,-42,45,29,29,-3,-7,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-8,29,29,45,45,-36,-37,45,29,-4,45,-14,45,45,-22,-23,-24,-25,-26,45,45,45,45,45,45,45,45,45,45,-13,-20,29,45,-40,-19,29,29,29,29,29,45,-9,-11,45,45,-53,29,29,-10,45,29,-12,]),'SUB':([13,14,16,17,19,20,25,26,27,28,29,30,31,32,33,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,],[30,30,-38,30,30,46,30,-15,-16,30,30,30,30,-41,-42,46,30,30,-3,-7,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-8,30,30,46,46,-36,-37,46,30,-4,46,-14,46,46,-22,-23,-24,-25,-26,46,46,46,46,46,46,46,46,46,46,-13,-20,30,46,-40,-19,30,30,30,30,30,46,-9,-11,46,46,-53,30,30,-10,46,30,-12,]),'INT':([13,14,17,19,25,26,27,28,29,30,31,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,73,92,94,99,100,101,102,104,107,108,111,112,113,114,116,117,],[32,32,32,32,32,-15,-16,32,32,32,32,32,32,-3,-7,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-8,32,32,32,-4,-14,-13,32,32,32,32,32,32,-9,-11,-53,32,32,-10,32,-12,]),'STRING':([13,14,17,19,25,26,27,28,29,30,31,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,73,92,94,99,100,101,102,104,107,108,111,112,113,114,116,117,],[33,33,33,33,33,-15,-16,33,33,33,33,33,33,-3,-7,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-8,33,33,33,-4,-14,-13,33,33,33,33,33,33,-9,-11,-53,33,33,-10,33,-12,]),'VAR':([13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[34,34,34,-15,-16,-3,-7,-8,-4,-14,-13,34,34,-9,-11,-53,34,-10,34,-12,]),'PRINT':([13,17,19,26,27,40,42,58,70,73,92,100,101,107,108,111,112,114,116,117,],[35,35,35,-15,-16,-3,-7,-8,-4,-14,-13,35,35,-9,-11,-53,35,-10,35,-12,]),'SEMI':([16,20,21,32,33,36,62,65,66,67,71,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,98,105,106,110,],[-38,42,58,-41,-42,70,92,-36,-37,-35,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-17,-40,-19,111,-21,-18,]),'QUESTIONMARK':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,44,-41,-42,44,44,44,-36,-37,-35,-39,44,44,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,44,44,-20,44,-40,-19,44,44,44,44,]),'MULT':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,47,-41,-42,47,47,47,47,47,47,47,47,47,47,47,-24,-25,47,47,47,47,47,47,47,47,47,47,47,-20,47,-40,-19,47,47,47,47,]),'DIV':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,48,-41,-42,48,48,48,48,48,48,48,48,48,48,48,-24,-25,48,48,48,48,48,48,48,48,48,48,48,-20,48,-40,-19,48,48,48,48,]),'MOD':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,49,-41,-42,49,49,49,49,49,49,49,49,49,49,49,-24,-25,-26,49,49,49,49,49,49,49,49,49,49,-20,49,-40,-19,49,49,49,49,]),'GREATER':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,50,-41,-42,50,50,50,-36,-37,50,50,50,50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,50,50,50,50,-20,50,-40,-19,50,50,50,50,]),'LESS':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,51,-41,-42,51,51,51,-36,-37,51,51,51,51,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,51,51,51,51,-20,51,-40,-19,51,51,51,51,]),'EQUAL':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,97,98,106,109,110,115,],[-38,52,-41,-42,52,52,52,-36,-37,52,52,52,52,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,52,52,52,52,102,-20,52,-40,-19,52,52,52,52,]),'GREATEREQ':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,53,-41,-42,53,53,53,-36,-37,53,53,53,53,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,53,53,53,53,-20,53,-40,-19,53,53,53,53,]),'LESSEQ':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,54,-41,-42,54,54,54,-36,-37,54,54,54,54,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,54,54,54,54,-20,54,-40,-19,54,54,54,54,]),'NOTEQUAL':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,55,-41,-42,55,55,55,-36,-37,55,55,55,55,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,55,55,55,55,-20,55,-40,-19,55,55,55,55,]),'OR':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,56,-41,-42,56,56,56,-36,-37,-35,56,56,56,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,56,56,-20,56,-40,-19,56,56,56,56,]),'AND':([16,20,32,33,36,62,64,65,66,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,106,109,110,115,],[-38,57,-41,-42,57,57,57,-36,-37,-35,57,57,57,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,57,-34,57,57,-20,57,-40,-19,57,57,57,57,]),'RBLOCK':([16,28,32,33,63,64,65,66,67,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,97,98,103,106,],[-38,-43,-41,-42,93,-44,-36,-37,-35,-39,98,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-43,-40,-19,-45,-21,]),'COLON':([16,32,33,65,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,97,98,106,],[-38,-41,-42,-36,-37,-35,-39,99,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-40,-19,-21,]),'TO':([16,32,33,65,66,67,71,76,77,78,79,80,81,82,83,84,85,86,87,88,93,97,98,106,109,],[-38,-41,-42,-36,-37,-35,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-20,-40,-19,-21,113,]),'ASSIGN':([16,95,],[37,104,]),'ELSE':([26,27,40,42,58,70,73,92,107,108,111,114,117,],[-15,-16,-3,-7,-8,-4,-14,-13,112,-11,-53,-10,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,2,],[1,4,]),'func':([0,2,13,17,19,100,101,112,116,],[2,2,26,26,26,26,26,26,26,]),'flist':([7,12,],[9,15,]),'body':([13,17,19,],[18,39,41,]),'stmt':([13,17,19,100,101,112,116,],[19,19,19,107,108,114,117,]),'expr':([13,14,17,19,25,28,29,30,31,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,69,94,99,100,101,102,104,112,113,116,],[20,36,20,20,62,64,65,66,67,71,64,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,64,106,20,20,109,110,20,115,20,]),'defvar':([13,17,19,100,101,112,116,],[21,21,21,21,21,21,21,]),'print_smt':([13,17,19,100,101,112,116,],[27,27,27,27,27,27,27,]),'clist':([28,38,94,],[63,72,103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> <empty>','prog',0,'p_prog','MyParser.py',56),
  ('prog -> func prog','prog',2,'p_prog','MyParser.py',57),
  ('func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE','func',9,'p_func','MyParser.py',69),
  ('func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI','func',9,'p_func','MyParser.py',70),
  ('body -> <empty>','body',0,'p_body','MyParser.py',79),
  ('body -> stmt body','body',2,'p_body','MyParser.py',80),
  ('stmt -> expr SEMI','stmt',2,'p_smt','MyParser.py',92),
  ('stmt -> defvar SEMI','stmt',2,'p_smt','MyParser.py',93),
  ('stmt -> IF LPAREN expr RPAREN stmt','stmt',5,'p_smt','MyParser.py',94),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_smt','MyParser.py',95),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_smt','MyParser.py',96),
  ('stmt -> FOR LPAREN ID EQUAL expr TO expr RPAREN stmt','stmt',9,'p_smt','MyParser.py',97),
  ('stmt -> RETURN expr SEMI','stmt',3,'p_smt','MyParser.py',98),
  ('stmt -> LBRACE body RBRACE','stmt',3,'p_smt','MyParser.py',99),
  ('stmt -> func','stmt',1,'p_smt','MyParser.py',100),
  ('stmt -> print_smt','stmt',1,'p_smt','MyParser.py',101),
  ('defvar -> VAR TYPE ID','defvar',3,'p_defvar','MyParser.py',129),
  ('defvar -> VAR TYPE ID ASSIGN expr','defvar',5,'p_defvar','MyParser.py',130),
  ('expr -> expr LBLOCK expr RBLOCK','expr',4,'p_expr','MyParser.py',137),
  ('expr -> LBLOCK clist RBLOCK','expr',3,'p_expr','MyParser.py',138),
  ('expr -> expr QUESTIONMARK expr COLON expr','expr',5,'p_expr','MyParser.py',139),
  ('expr -> expr ADD expr','expr',3,'p_expr','MyParser.py',140),
  ('expr -> expr SUB expr','expr',3,'p_expr','MyParser.py',141),
  ('expr -> expr MULT expr','expr',3,'p_expr','MyParser.py',142),
  ('expr -> expr DIV expr','expr',3,'p_expr','MyParser.py',143),
  ('expr -> expr MOD expr','expr',3,'p_expr','MyParser.py',144),
  ('expr -> expr GREATER expr','expr',3,'p_expr','MyParser.py',145),
  ('expr -> expr LESS expr','expr',3,'p_expr','MyParser.py',146),
  ('expr -> expr EQUAL expr','expr',3,'p_expr','MyParser.py',147),
  ('expr -> expr GREATEREQ expr','expr',3,'p_expr','MyParser.py',148),
  ('expr -> expr LESSEQ expr','expr',3,'p_expr','MyParser.py',149),
  ('expr -> expr NOTEQUAL expr','expr',3,'p_expr','MyParser.py',150),
  ('expr -> expr OR expr','expr',3,'p_expr','MyParser.py',151),
  ('expr -> expr AND expr','expr',3,'p_expr','MyParser.py',152),
  ('expr -> NOT expr','expr',2,'p_expr','MyParser.py',153),
  ('expr -> ADD expr','expr',2,'p_expr','MyParser.py',154),
  ('expr -> SUB expr','expr',2,'p_expr','MyParser.py',155),
  ('expr -> ID','expr',1,'p_expr','MyParser.py',156),
  ('expr -> ID ASSIGN expr','expr',3,'p_expr','MyParser.py',157),
  ('expr -> ID LPAREN clist RPAREN','expr',4,'p_expr','MyParser.py',158),
  ('expr -> INT','expr',1,'p_expr','MyParser.py',159),
  ('expr -> STRING','expr',1,'p_expr','MyParser.py',160),
  ('clist -> <empty>','clist',0,'p_clist','MyParser.py',214),
  ('clist -> expr','clist',1,'p_clist','MyParser.py',215),
  ('clist -> expr COMMA clist','clist',3,'p_clist','MyParser.py',216),
  ('flist -> <empty>','flist',0,'p_flist','MyParser.py',238),
  ('flist -> TYPE ID','flist',2,'p_flist','MyParser.py',239),
  ('flist -> TYPE ID COMMA flist','flist',4,'p_flist','MyParser.py',240),
  ('type -> INT','type',1,'p_type','MyParser.py',254),
  ('type -> VECTOR','type',1,'p_type','MyParser.py',255),
  ('type -> NULL','type',1,'p_type','MyParser.py',256),
  ('type -> STRING','type',1,'p_type','MyParser.py',257),
  ('print_smt -> PRINT LPAREN expr RPAREN SEMI','print_smt',5,'p_statement_print','MyParser.py',263),
]
